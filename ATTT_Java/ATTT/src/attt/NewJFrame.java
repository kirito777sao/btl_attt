/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package attt;

/**
 *
 * @author Admin
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mh1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        k1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        mh2 = new javax.swing.JLabel();
        btmh = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        gm1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        k2 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        gm2 = new javax.swing.JLabel();
        btgm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("MÃ HÓA CEASAR");

        jLabel2.setText("Văn bản mã hóa:");

        jLabel3.setText("Khóa K:");

        jLabel4.setText("Văn bản đã mã hóa:");

        mh2.setText("Văn bản mã hóa");

        btmh.setText("Mã Hóa");
        btmh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmhActionPerformed(evt);
            }
        });

        jLabel6.setText("Văn bản cần giải mã:");

        jLabel7.setText("Khóa K:");

        jLabel8.setText("Văn bản đã giải mã:");

        gm2.setText("Văn bản giải mã");

        btgm.setText("Giải Mã");
        btgm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btgmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(k1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mh2)
                            .addComponent(mh1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(k2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gm2)
                            .addComponent(gm1, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(btmh))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btgm)
                        .addGap(120, 120, 120)))
                .addGap(97, 97, 97))
            .addGroup(layout.createSequentialGroup()
                .addGap(335, 335, 335)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(mh1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(k1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(mh2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(gm1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(k2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(gm2))))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btmh)
                    .addComponent(btgm))
                .addContainerGap(199, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btmhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmhActionPerformed
        // TODO add your handling code here:
        String mhoa = mh1.getText();
        int kma = Integer.parseInt(k1.getText());
        String mahoa1 = Mahoa(mhoa, kma);
        mh2.setText(mahoa1);
    }//GEN-LAST:event_btmhActionPerformed

    private void btgmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btgmActionPerformed
        // TODO add your handling code here:
        String gma = gm1.getText();
        int kgiai = Integer.parseInt(k2.getText());
        String giaima = Giaima(gma, kgiai);
        gm2.setText(giaima);
    }//GEN-LAST:event_btgmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
    public static String Mahoa(String mhoa, int kma) {
        String cipherText = ""; // Khởi tạo chuỗi rỗng để lưu văn bản đã mã hóa

        for (char character : mhoa.toCharArray()) { // Duyệt qua từng ký tự trong văn bản
            if (Character.isLetter(character)) { // Kiểm tra xem ký tự hiện tại có phải là chữ cái hay không
                boolean isUpperCase = Character.isUpperCase(character); // Kiểm tra xem chữ cái có phải là chữ hoa hay không
                character = Character.toLowerCase(character); // Chuyển chữ cái về chữ thường để xử lý
                int charIndex = character - 97; // Tính vị trí của chữ cái trong bảng chữ cái
                int encryptedIndex = (charIndex + kma) % 26; // Tính vị trí mã hóa
                char encryptedChar = (char) (encryptedIndex + 97); // Chuyển vị trí mã hóa về chữ cái tương ứng
                if (isUpperCase) {
                    encryptedChar = Character.toUpperCase(encryptedChar); // Nếu chữ cái ban đầu là chữ hoa, thì chuyển chữ cái mã hóa về chữ hoa
                }
                cipherText += encryptedChar; // Nối thêm chữ cái mã hóa vào chuỗi cipherText
            } else {
                cipherText += character; // Nếu không phải chữ cái, thêm ký tự đó vào chuỗi cipherText
            }
        }
        return cipherText; // Trả về chuỗi văn bản đã mã hóa
    }
    
    public static String Giaima(String cipherText, int key) {
        String plainText = ""; // Khởi tạo chuỗi rỗng để lưu văn bản đã giải mã

        for (char character : cipherText.toCharArray()) { // Duyệt qua từng ký tự trong văn bản
            if (Character.isLetter(character)) { // Kiểm tra xem ký tự hiện tại có phải là chữ cái hay không
                boolean isUpperCase = Character.isUpperCase(character); // Kiểm tra xem chữ cái có phải là chữ hoa hay không
                character = Character.toLowerCase(character); // Chuyển chữ cái về chữ thường để xử lý
                int charIndex = character - 97; // Tính vị trí của chữ cái trong bảng chữ cái
                int decryptedIndex = (charIndex - key + 26) % 26; // Tính vị trí giải mã
                char decryptedChar = (char) (decryptedIndex + 97); // Chuyển vị trí giải mã về chữ cái tương ứng
                if (isUpperCase) {
                    decryptedChar = Character.toUpperCase(decryptedChar); // Nếu chữ cái ban đầu là chữ hoa, thì chuyển chữ cái giải mã về chữ hoa
                }
                plainText += decryptedChar; // Nối thêm chữ cái giải mã vào chuỗi plainText
            } else {
                plainText += character; // Nếu không phải chữ cái, thêm ký tự đó vào chuỗi plainText
            }
        }
        return plainText; // Trả về chuỗi văn bản đã giải mã
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btgm;
    private javax.swing.JButton btmh;
    private javax.swing.JTextField gm1;
    private javax.swing.JLabel gm2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField k1;
    private javax.swing.JTextField k2;
    private javax.swing.JTextField mh1;
    private javax.swing.JLabel mh2;
    // End of variables declaration//GEN-END:variables
}
